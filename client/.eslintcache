[{"C:\\Users\\ivanw\\Documents\\API\\twitch-clips\\client\\src\\index.tsx":"1","C:\\Users\\ivanw\\Documents\\API\\twitch-clips\\client\\src\\App.tsx":"2","C:\\Users\\ivanw\\Documents\\API\\twitch-clips\\client\\src\\utils\\numberFormatter.ts":"3","C:\\Users\\ivanw\\Documents\\API\\twitch-clips\\client\\src\\utils\\timeFormatter.ts":"4","C:\\Users\\ivanw\\Documents\\API\\twitch-clips\\client\\src\\components\\GameSelection.tsx":"5","C:\\Users\\ivanw\\Documents\\API\\twitch-clips\\client\\src\\utils\\gameIDs.ts":"6","C:\\Users\\ivanw\\Documents\\API\\twitch-clips\\client\\src\\components\\LanguageSelection.tsx":"7","C:\\Users\\ivanw\\Documents\\API\\twitch-clips\\client\\src\\utils\\languageIDs.ts":"8","C:\\Users\\ivanw\\Documents\\API\\twitch-clips\\client\\src\\pages\\ClipPage.tsx":"9","C:\\Users\\ivanw\\Documents\\API\\twitch-clips\\client\\src\\components\\ClipInfo.tsx":"10","C:\\Users\\ivanw\\Documents\\API\\twitch-clips\\client\\src\\components\\ClipVideo.tsx":"11","C:\\Users\\ivanw\\Documents\\API\\twitch-clips\\client\\src\\components\\NavBar.tsx":"12","C:\\Users\\ivanw\\Documents\\API\\twitch-clips\\client\\src\\components\\NoClips.tsx":"13"},{"size":491,"mtime":1611374928257,"results":"14","hashOfConfig":"15"},{"size":105,"mtime":1611366782841,"results":"16","hashOfConfig":"15"},{"size":408,"mtime":1611180235729,"results":"17","hashOfConfig":"15"},{"size":791,"mtime":1611180250057,"results":"18","hashOfConfig":"15"},{"size":1375,"mtime":1611614237893,"results":"19","hashOfConfig":"15"},{"size":3239,"mtime":1611407171469,"results":"20","hashOfConfig":"15"},{"size":1411,"mtime":1611679821941,"results":"21","hashOfConfig":"15"},{"size":743,"mtime":1611421476373,"results":"22","hashOfConfig":"15"},{"size":9538,"mtime":1611614294838,"results":"23","hashOfConfig":"15"},{"size":4990,"mtime":1611697973824,"results":"24","hashOfConfig":"15"},{"size":2314,"mtime":1611462263115,"results":"25","hashOfConfig":"15"},{"size":1982,"mtime":1611618618786,"results":"26","hashOfConfig":"15"},{"size":2181,"mtime":1611586334531,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"yzh2q7",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\ivanw\\Documents\\API\\twitch-clips\\client\\src\\index.tsx",[],["58","59"],"C:\\Users\\ivanw\\Documents\\API\\twitch-clips\\client\\src\\App.tsx",[],"C:\\Users\\ivanw\\Documents\\API\\twitch-clips\\client\\src\\utils\\numberFormatter.ts",[],"C:\\Users\\ivanw\\Documents\\API\\twitch-clips\\client\\src\\utils\\timeFormatter.ts",[],"C:\\Users\\ivanw\\Documents\\API\\twitch-clips\\client\\src\\components\\GameSelection.tsx",[],"C:\\Users\\ivanw\\Documents\\API\\twitch-clips\\client\\src\\utils\\gameIDs.ts",["60"],"export default {\r\n  \"All Games\": \"0\",\r\n  \"ARK: Survival Evolved\": \"489635\",\r\n  ASMR: \"509659\",\r\n  \"Age of Empires II\": \"13389\",\r\n  \"Among Us\": \"510218\",\r\n  \"Apex Legends\": \"511224\",\r\n  Art: \"509660\",\r\n  \"At Dead Of Night\": \"1180890490\",\r\n  \"Black Desert Online\": \"386821\",\r\n  \"Bloons TD 6\": \"508292\",\r\n  \"Call Of Duty: Modern Warfare\": \"1614555304\",\r\n  \"Call of Duty: Black Ops Cold War\": \"512709\",\r\n  \"Call of Duty: Warzone\": \"512710\",\r\n  Chess: \"743\",\r\n  \"Clash Royale\": \"491168\",\r\n  \"Counter-Strike: Global Offensive\": \"32399\",\r\n  \"Cyberpunk 2077\": \"65876\",\r\n  \"Dark Souls II\": \"91423\",\r\n  \"Dark Souls III\": \"490292\",\r\n  \"Dark Souls\": \"29433\",\r\n  DayZ: \"65632\",\r\n  \"Dead by Daylight\": \"491487\",\r\n  \"Destiny 2\": \"497057\",\r\n  \"Don't Starve Together\": \"488634\",\r\n  \"Dota 2\": \"29595\",\r\n  \"Dungeons & Dragons\": \"509577\",\r\n  \"Escape From Tarkov\": \"491931\",\r\n  \"Eternal Return: Black Survival\": \"512864\",\r\n  \"FIFA 21\": \"518204\",\r\n  \"FINAL FANTASY XIV Online\": \"24241\",\r\n  \"Fall Guys: Ultimate Knockout\": \"512980\",\r\n  \"Fallout: The Frontier\": \"2111642095\",\r\n  \"Fitness & Health\": \"509671\",\r\n  Fortnite: \"33214\",\r\n  \"Games + Demos\": \"66082\",\r\n  \"Garena Free Fire\": \"502732\",\r\n  \"Genshin Impact\": \"513181\",\r\n  GeoGuessr: \"369418\",\r\n  \"Grand Theft Auto IV\": \"18707\",\r\n  \"Grand Theft Auto V\": \"32982\",\r\n  \"HITMAN 3\": \"518011\",\r\n  Hearthstone: \"138585\",\r\n  \"Heroes of Might and Magic III: The Restoration of Erathia\": \"12839\",\r\n  \"Hunt: Showdown\": \"500188\",\r\n  \"Jackbox Party Packs\": \"493174\",\r\n  \"Just Chatting\": \"509658\",\r\n  \"League of Legends\": \"21779\",\r\n  \"Legends of Runeterra\": \"514790\",\r\n  \"Madden NFL 21\": \"517406\",\r\n  \"Magic: The Gathering\": \"2748\",\r\n  \"Mario Kart 8\": \"369588\",\r\n  Minecraft: \"27471\",\r\n  \"Monopoly Plus\": \"493159\",\r\n  \"Monster Hunter Generations\": \"492850\",\r\n  Mother: \"10789\",\r\n  Music: \"26936\",\r\n  \"NBA 2K21\": \"518023\",\r\n  \"Old School RuneScape\": \"459931\",\r\n  Overwatch: \"488552\",\r\n  \"PLAYERUNKNOWN'S BATTLEGROUNDS\": \"493057\",\r\n  \"Path of Exile\": \"29307\",\r\n  Phasmophobia: \"518184\",\r\n  \"Phoenix Wright: Ace Attorney\": \"17777\",\r\n  Poker: \"488190\",\r\n  \"Pokémon Sword/Shield\": \"497451\",\r\n  \"Pokémon Trading Card Game\": \"9618\",\r\n  ROBLOX: \"23020\",\r\n  \"Resident Evil Village\": \"518017\",\r\n  Retro: \"27284\",\r\n  Risk: \"9809\",\r\n  \"Rocket League\": \"30921\",\r\n  Rust: \"263490\",\r\n  SMITE: \"32507\",\r\n  Satisfactory: \"506456\",\r\n  \"Science & Technology\": \"509670\",\r\n  \"Sea of Thieves\": \"490377\",\r\n  \"Sekiro: Shadows Die Twice\": \"506415\",\r\n  \"Skul: The Hero Slayer\": \"515386\",\r\n  Slots: \"498566\",\r\n  \"Star Wars Battlefront II\": \"492546\",\r\n  \"StarCraft II\": \"490422\",\r\n  \"Stardew Valley\": \"490744\",\r\n  \"Super Smash Bros. Ultimate\": \"504461\",\r\n  \"Talk Shows & Podcasts\": \"417752\",\r\n  \"Teamfight Tactics\": \"513143\",\r\n  \"The Elder Scrolls Online\": \"65654\",\r\n  \"The Forest\": \"7022\",\r\n  \"The Legend of Zelda: Breath of the Wild\": \"110758\",\r\n  \"The Movies\": \"3475\",\r\n  \"The Sims 4\": \"369252\",\r\n  Tibia: \"19619\",\r\n  \"Tom Clancy's Rainbow Six Siege\": \"460630\",\r\n  \"Total War: Three Kingdoms\": \"502377\",\r\n  VALORANT: \"516575\",\r\n  VRChat: \"499003\",\r\n  \"Virtual Casino\": \"29452\",\r\n  \"Warcraft III\": \"12924\",\r\n  \"Welcome to the Game II\": \"499507\",\r\n  \"World of Tanks\": \"27546\",\r\n  \"World of Warcraft\": \"18122\",\r\n  \"World of Warships\": \"32502\",\r\n};\r\n","C:\\Users\\ivanw\\Documents\\API\\twitch-clips\\client\\src\\components\\LanguageSelection.tsx",[],"C:\\Users\\ivanw\\Documents\\API\\twitch-clips\\client\\src\\utils\\languageIDs.ts",["61"],"export default {\r\n  Any: \"any\",\r\n  English: \"en\",\r\n  Español: \"es\",\r\n  Português: \"pt\",\r\n  Deutsch: \"de\",\r\n  한국어: \"ko\",\r\n  русский: \"ru\",\r\n  français: \"fr\",\r\n  Italiano: \"it\",\r\n  Türkçe: \"tr\",\r\n  日本語: \"ja\",\r\n  中文: \"zh\",\r\n  \"język polski\": \"pl\",\r\n  العربية: \"ar\",\r\n  čeština: \"cs\",\r\n  magyar: \"hu\",\r\n  Nederlands: \"nl\",\r\n  suomi: \"fi\",\r\n  Svenska: \"sv\",\r\n  ไทย: \"th\",\r\n  dansk: \"da\",\r\n  ελληνικά: \"el\",\r\n  Norsk: \"no\",\r\n  \"български език\": \"bg\",\r\n  Română: \"ro\",\r\n  Slovenčina: \"sk\",\r\n  \"Bahasa Indonesia\": \"id\",\r\n  Українська: \"uk\",\r\n  \"Wikang Tagalog\": \"tl\",\r\n  català: \"ca\",\r\n  \"Tiếng Việt\": \"vi\",\r\n  हिन्दी: \"hi\",\r\n  \"Bahasa Melayu\": \"ms\",\r\n};\r\n","C:\\Users\\ivanw\\Documents\\API\\twitch-clips\\client\\src\\pages\\ClipPage.tsx",["62"],"import { useState, useRef, useEffect } from \"react\";\r\nimport { useInfiniteQuery } from \"react-query\";\r\nimport { useHotkeys } from \"react-hotkeys-hook\";\r\nimport { ClipType } from \"../types/clipType\";\r\nimport ClipInfo from \"../components/ClipInfo\";\r\nimport ClipVideo from \"../components/ClipVideo\";\r\nimport NavBar from \"../components/NavBar\";\r\nimport NoClips from \"../components/NoClips\";\r\n\r\nasync function fetchClips(queryArgs: any) {\r\n  const params = {\r\n    ...queryArgs.queryKey[1],\r\n    cursor: queryArgs.pageParam || \"\",\r\n  };\r\n  // console.log(\"PARAMS\", params);\r\n  const data = await fetch(\r\n    \"http://localhost:5000/test/db-streams?\" + new URLSearchParams(params),\r\n    {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }\r\n  );\r\n  // console.log(\"STREAMS DATA\", data);\r\n  return await data.json();\r\n}\r\n\r\nfunction ClipPage() {\r\n  const [game, setGame] = useState<string>(\"0\"); // default all games\r\n  const [language, setLanguage] = useState<string>(\"en\"); // default english\r\n\r\n  const {\r\n    data,\r\n    hasNextPage,\r\n    // isFetchingNextPage,\r\n    fetchNextPage,\r\n    refetch,\r\n  } = useInfiniteQuery(\r\n    [\"clips\", { game: game, language: language }],\r\n    fetchClips,\r\n    {\r\n      retry: 1,\r\n      getNextPageParam: (lastPage, _) => {\r\n        // console.log(\"LAST PAGE\", lastPage, page);\r\n        if (lastPage.clips.length) {\r\n          return lastPage.clips[lastPage.clips.length - 1].clip_created_at;\r\n        } else {\r\n          return false;\r\n        }\r\n      },\r\n    }\r\n  );\r\n  const [clipIndex, setClipIndex] = useState<number>(0);\r\n  const [curClip, setCurClip] = useState<ClipType | null>(null);\r\n  const [clipStatus, setClipStatus] = useState<\"clip\" | \"none\" | \"end\">(\"none\");\r\n\r\n  const streamInfoRef = useRef<HTMLElement>(null);\r\n  const navRef = useRef<HTMLElement>(null);\r\n\r\n  useHotkeys(\"j\", () => prevClip());\r\n  useHotkeys(\"l\", () => nextClip());\r\n\r\n  const toggleLandscapePage = (page: HTMLElement | null) => {\r\n    if (page) {\r\n      let top = page.style.top;\r\n      if (streamInfoRef.current) streamInfoRef.current.style.top = \"100%\";\r\n      if (navRef.current) navRef.current.style.top = \"100%\";\r\n\r\n      if (top === \"0px\") {\r\n        page.style.top = \"100%\";\r\n      } else {\r\n        page.style.top = \"0px\";\r\n      }\r\n    } else {\r\n      if (streamInfoRef.current) streamInfoRef.current.style.top = \"100%\";\r\n      if (navRef.current) navRef.current.style.top = \"100%\";\r\n    }\r\n  };\r\n\r\n  const refreshClips = () => {\r\n    console.log(\"REFRESH\");\r\n    setClipIndex(0);\r\n    refetch();\r\n  };\r\n\r\n  const setGameSelection = (e: any) => {\r\n    setGame(e.target.value);\r\n    setClipIndex(0);\r\n    toggleLandscapePage(null);\r\n  };\r\n\r\n  const setLanguageSelection = (e: any) => {\r\n    setLanguage(e.target.value);\r\n    setClipIndex(0);\r\n    toggleLandscapePage(null);\r\n  };\r\n\r\n  // Initialize first clip\r\n  // useEffect(() => {\r\n  //   console.log(\"DATA\", data);\r\n  //   if (data && data.pages.length && data.pages[0].clips.length) {\r\n  //     // setCurClip(data.pages[0].clips[0]);\r\n  //     // setClipIndex(0);\r\n  //     setClipStatus(\"clip\");\r\n  //   } else {\r\n  //     setClipStatus(\"none\");\r\n  //   }\r\n  // }, [data]);\r\n\r\n  // Moving through clips\r\n  useEffect(() => {\r\n    if (data) {\r\n      console.log(\"START\");\r\n      let newClipIndex = clipIndex;\r\n\r\n      if (clipIndex < 0) newClipIndex = 0;\r\n\r\n      let countIndex = 0;\r\n      let foundClip = false;\r\n\r\n      // console.log(\"PAGES\", data.pages);\r\n      // Loop through all pages\r\n      for (let p = 0; p < data.pages.length; p++) {\r\n        // Find the page where the clip is in\r\n        if (countIndex + data.pages[p].clips.length - 1 >= newClipIndex) {\r\n          foundClip = true;\r\n          // console.log(\"FOUND CLIP\", p, countIndex, newClipIndex);\r\n          setCurClip(data.pages[p].clips[newClipIndex - countIndex]);\r\n          setClipStatus(\"clip\");\r\n          break;\r\n        } else {\r\n          countIndex += data.pages[p].clips.length;\r\n        }\r\n      }\r\n\r\n      // If clip not found, then fetch more or reached end of clips\r\n      if (!foundClip) {\r\n        newClipIndex = countIndex;\r\n        // console.log(\"CLIP NOT FOUND\", newClipIndex);\r\n        if (hasNextPage) {\r\n          // console.log(\"FETCH NEXT PAGE\");\r\n          fetchNextPage();\r\n        } else {\r\n          setCurClip(null);\r\n          if (clipIndex > 0) {\r\n            setClipStatus(\"end\");\r\n          } else {\r\n            setClipStatus(\"none\");\r\n          }\r\n        }\r\n      }\r\n      console.log(\"FINISH\");\r\n      setClipIndex(newClipIndex);\r\n    }\r\n  }, [data, clipIndex, hasNextPage]);\r\n\r\n  const nextClip = () => setClipIndex((prevIndex) => prevIndex + 1);\r\n  const prevClip = () => setClipIndex((prevIndex) => prevIndex - 1);\r\n\r\n  return (\r\n    <div className=\"fixed w-full h-full grid grid-rows-vert justify-items-center landscape:grid-rows-1\">\r\n      {/* NAVBAR */}\r\n      <nav\r\n        className=\"row-span-1 bg-gray-900 w-full h-full flex text-gray-500 px-3 z-10 transition-top duration-300\r\n                  landscape:absolute landscape:top-full landscape:left-0 landscape:right-0\r\n                  landscape:w-auto landscape:h-full landscape:block landscape:p-6 landscape:mr-20\r\n                  lg:px-24 lg:max-w-screen-xl lg:bg-light\"\r\n        ref={navRef}\r\n      >\r\n        <NavBar\r\n          setGameSelection={setGameSelection}\r\n          setLanguageSelection={setLanguageSelection}\r\n          toggleLandscapePage={toggleLandscapePage}\r\n          refreshClips={refreshClips}\r\n          navRef={navRef}\r\n        />\r\n      </nav>\r\n      <main className=\"row-span-1 w-full h-full lg:flex lg:h-5/6 lg:px-24 lg:max-w-screen-xl lg:mt-5\">\r\n        {/* CLIP VIDEO SECTION */}\r\n        <section className=\"flex w-full h-2/4 bg-black landscape:h-full lg:h-full\">\r\n          {clipStatus === \"clip\" ? (\r\n            <ClipVideo\r\n              curClip={curClip}\r\n              nextClip={nextClip}\r\n              prevClip={prevClip}\r\n              toggleLandscapePage={toggleLandscapePage}\r\n              streamInfoRef={streamInfoRef}\r\n              navRef={navRef}\r\n            />\r\n          ) : (\r\n            <NoClips\r\n              clipStatus={clipStatus}\r\n              prevClip={prevClip}\r\n              refreshClips={refreshClips}\r\n              toggleLandscapePage={toggleLandscapePage}\r\n              navRef={navRef}\r\n            />\r\n          )}\r\n        </section>\r\n\r\n        {/* CLIP INFO SECTION */}\r\n        <section\r\n          className=\"w-full h-2/4 bg-gray-900 overflow-y-auto z-10 transition-top duration-300\r\n                    landscape:absolute landscape:top-full landscape:left-0 landscape:right-0 landscape:w-auto landscape:h-full landscape:p-3 landscape:mr-20\r\n                    lg:w-100 lg:h-full lg:overflow-y-auto lg:rounded-r\"\r\n          ref={streamInfoRef}\r\n        >\r\n          {clipStatus === \"clip\" ? (\r\n            <ClipInfo\r\n              curClip={curClip}\r\n              nextClip={nextClip}\r\n              prevClip={prevClip}\r\n              clipIndex={clipIndex}\r\n              toggleLandscapePage={toggleLandscapePage}\r\n              streamInfoRef={streamInfoRef}\r\n            />\r\n          ) : (\r\n            <>\r\n              {clipStatus === \"end\" && (\r\n                <div className=\"w-full h-full bg-gray-900 p-3 lg:px-5\">\r\n                  <div className=\"flex w-full text-lg landscape:hidden\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"icon-btn flex items-center group pr-2\"\r\n                      onClick={prevClip}\r\n                    >\r\n                      <img\r\n                        className=\"w-6 h-6\"\r\n                        src=\"res/chevron-left.svg\"\r\n                        alt=\"prev clip\"\r\n                      />\r\n                      <span className=\"text-gray-500 text-sm font-semibold transition duration-300 group-hover:text-gray-300\">\r\n                        Back <span className=\"hidden lg:inline-block\">(J)</span>\r\n                      </span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </section>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ClipPage;\r\n\r\n// useEffect(() => {\r\n//   if (iframeRef.current) {\r\n//     iframeRef.current.onended = () => console.log(\"VIDEO ENDED\");\r\n//     iframeRef.current.onchange = () => console.log(\"ON CHANGE\");\r\n//     // iframeRef.current.on(\"ended\", () => console.log(\"ON ENDED\"));\r\n//     iframeRef.current.addEventListener(\"ended\", () => console.log(\"ENDED\"));\r\n//   }\r\n// }, [iframeRef.current]);\r\n\r\n// useEffect(() => {\r\n//   window.matchMedia(\"(orientation: portrait)\").onchange = (m) => {\r\n//     console.log(m);\r\n//     if (streamInfoRef.current) {\r\n//       streamInfoRef.current.style.display = \"none\";\r\n//       const h = streamInfoRef.current.offsetHeight; //cause a reflow\r\n//       console.log(h);\r\n//       streamInfoRef.current.style.display = \"flex\";\r\n//     }\r\n//     // if (streamInfoRef.current)\r\n//     //   if (m.matches) {\r\n//     //     streamInfoRef.current.style.top = \"0px\";\r\n//     //   } else {\r\n//     //     streamInfoRef.current.style.top = \"100%\";\r\n//     //   }\r\n//   };\r\n// }, []);\r\n\r\n// if (isLoading) return <h1>Loading...</h1>;\r\n// if (isError) return <h1>Error: {error}</h1>;\r\n//\r\n\r\n// useEffect(() => {\r\n//   const focusTimeout = setTimeout(() => {\r\n//     console.log(\"FOCUS\");\r\n//     iframeRef.current?.click();\r\n//   }, 4000);\r\n\r\n//   return () => clearTimeout(focusTimeout);\r\n// }, [curClip?.clip_embed_url]);\r\n","C:\\Users\\ivanw\\Documents\\API\\twitch-clips\\client\\src\\components\\ClipInfo.tsx",[],"C:\\Users\\ivanw\\Documents\\API\\twitch-clips\\client\\src\\components\\ClipVideo.tsx",[],"C:\\Users\\ivanw\\Documents\\API\\twitch-clips\\client\\src\\components\\NavBar.tsx",[],"C:\\Users\\ivanw\\Documents\\API\\twitch-clips\\client\\src\\components\\NoClips.tsx",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":1,"column":1,"nodeType":"69","endLine":103,"endColumn":3},{"ruleId":"67","severity":1,"message":"68","line":1,"column":1,"nodeType":"69","endLine":35,"endColumn":3},{"ruleId":"70","severity":1,"message":"71","line":155,"column":6,"nodeType":"72","endLine":155,"endColumn":36,"suggestions":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchNextPage'. Either include it or remove the dependency array.","ArrayExpression",["76"],"no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},"Update the dependencies array to be: [data, clipIndex, hasNextPage, fetchNextPage]",{"range":"79","text":"80"},[4560,4590],"[data, clipIndex, hasNextPage, fetchNextPage]"]